@{
    ViewData["Title"] = "EditProduct";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@model Product


<div id="main-content">
    <div class="card">
        <div class="container-fluid">
            <div class="title">Yeni məhsul</div>
            <div class="content">
                <form method="post" enctype="multipart/form-data">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Məhsulun adı</label>
                                <input type="text" class="form-control" name="ProductName" required value="@Model.ProductName">
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Endirimli Qiymət</label>
                                <input type="text" class="form-control" name="ProductWithoutPrice" value="@Model.ProductWithoutPrice">
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Endirimsiz Qiymət</label>
                                <input type="text" class="form-control" required name="ProductPrice" value="@Model.ProductPrice">
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Kateqoriya</label>
                                <select id="subCategory" class="form-control">
                                    @foreach (SubCategory item in ViewBag.sub)
                                    {
                                        <option @(item.SubCategoryId == Model.ProductDeepCategory.DeepCategorySubCategoryId ? "selected" : string.Empty) value="@item.SubCategoryId">@item.SubCategoryName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Kateqoriya</label>
                                <select id="deepCategory" class="form-control" name="ProductDeepCategoryId">
                                    @foreach (DeepCategory item in ViewBag.Deeb)
                                    {
                                        <option @(item.DeepCategoryId == Model.ProductDeepCategoryId ? "selected" : string.Empty) value="@item.DeepCategoryId">@item.DeepCategoryName</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <button id="addButton" type="button" class="btn btn-primary">Əlavə et</button>
                        </div>
                        <div class="row mt-4 d-none">
                            <div class="col-md-3">
                                <select id="optionList" class="form-control">
                                    @foreach (TechCharacteristic item in ViewBag.tech)
                                    {
                                        <option value="@item.TechCharacteristicId">@item.TechCharacteristicName</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-6">
                                <input type="text" id="textInput" class="form-control">
                            </div>
                            <div class="col-md-3">
                                <button type="button" class="btn btn-danger removeButtonBack">Sil</button>
                            </div>
                        </div>
                        <div id="addedOptions" class="col-md-12 mt-3">
                            @foreach (TechCharacteristicsContent item1 in Model.TechCharacteristicsContents)
                            {
                                <div class="row mt-4" tchid="@item1.TechCharacteristicsContentId">
                                    <div class="col-md-3">
                                        <select id="optionList" class="form-control" name="tch">
                                            @foreach (TechCharacteristic item in ViewBag.tech)
                                            {
                                                <option @(item.TechCharacteristicId == item1.TechCharacteristicsContentTechCharacteristicsId ? "selected" : string.Empty) value="@item.TechCharacteristicId">@item.TechCharacteristicName</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <input type="text" id="textInput" required class="form-control" name="tchcontent" value="@item1.TechCharacteristicsContentTitle">
                                    </div>
                                    <div class="col-md-3">
                                        <button type="button" class="btn btn-danger removeButtonBack">Sil</button>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label>Açıqlama</label>
                                <textarea type="text" class="form-control" required name="ProductDescription">@Model.ProductDescription</textarea>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            @foreach (ColorsPr item in ViewBag.colors)
                            {
                                <label>@item.ColorTitle</label>
                                <input type="checkbox" name="clrs" value="@item.ColorId" @(Model.ProductColors.Any(x => x.ProductColorColorId == item.ColorId) ? "checked" : "") />
                            }
                        </div>
                        <div class="col-sm-12">
                            <div class="form-images">
                                <div class="first-file">
                                    <label for="first-file">
                                        <img src="~/sekiller/@Model.ProductFirstPhotoUrl" />
                                    </label>
                                    <input id="first-file" type="file" name="firstFile" />
                                </div>
                                <div class="files">
                                    <div class="file">
                                        <label for="next-file">
                                            <img src="~/sekiller/upload.png" />
                                        </label>
                                        <input type="file" id="next-file" multiple />
                                    </div>
                                    @foreach (ImagesPh item in Model.ImagesPhs)
                                    {
                                        <div class="file removeFile" hid="@item.ImageId">
                                            <label><img src="~/sekiller/@item.ImageUrl"></label>
                                            <input type="file" id="next-file" name="nextFile">
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-success">Dəyişiklik et</button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .tag {
        display: inline-block;
        background-color: #f1f1f1;
        border-radius: 4px;
        padding: 2px 8px;
        margin-right: 4px;
        margin-bottom: 4px;
    }

    .close {
        cursor: pointer;
        margin-left: 4px;
    }

    form {
        width: 100%;
    }

    .form-images {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        border: 1px solid black;
        width: 99%;
        padding: 15px;
    }

    img {
        width: 100%;
    }

    .form-images .first-file {
        width: 30%;
    }

    .form-images label {
        border: 1px solid black;
        width: 100%;
        display: block;
        cursor: pointer;
        height: 100%;
    }

    .form-images input {
        display: none;
    }

    .form-images .files {
        width: 64%;
        display: flex;
        flex-wrap: wrap;
        align-content: start;
    }

        .form-images .files .file {
            width: 29%;
            margin-right: 1%;
            margin-bottom: 8px;
        }
</style>

<script>
    var optionList = document.getElementById('optionList');
    var textInput = document.getElementById('textInput');
    var addButton = document.getElementById('addButton');
    var addedOptions = document.getElementById('addedOptions');
    var subCategorySelect = document.getElementById('subCategory');
    var deepCategorySelect = document.getElementById('deepCategory');
    var initialOptionListHTML = optionList.innerHTML;

    addButton.addEventListener('click', function () {
        var selectedSubCategoryId = subCategorySelect.value;
        var selectedOption = optionList.value;
        var inputValue = textInput.value;

        getTech(selectedSubCategoryId)
            .then(function (tech) {
                if (Array.isArray(tech)) {
                    console.log(tech)
                    var newOption = document.createElement('div');
                    newOption.classList.add('row');
                    newOption.innerHTML = `
                                    <div class="col-md-3 mt-2">
                                          <select class="form-control" name="tch">
                                                ${tech.map(function (item) {
                        return `<option value="${item.techCharacteristicId}">${item.techCharacteristicName}</option>`;
                    }).join('')}
                                      </select>
                                    </div>
                                    <div class="col-md-6 mt-2">
                                          <input type="text" class="form-control" name="tchcontent" value="">
                                    </div>
                                        <div class="col-md-3 mt-2">
                                      <button class="btn btn-danger removeButton">Sil</button>
                                    </div>
                                `;

                    addedOptions.appendChild(newOption);

                    //textInput.value = '';
                } else {
                    console.error('Error: deepCategories is not an array');
                }
            });
    });






    addedOptions.addEventListener('click', function (event) {
        if (event.target.classList.contains('removeButton')) {
            event.target.closest('.row').remove();
        }
    });

    addedOptions.addEventListener('click', function (event) {
        if (event.target.classList.contains('removeButtonBack')) {
            var tchid = event.target.closest('.row').getAttribute('tchid');
            event.target.closest('.row').remove();
            $.ajax({
                type: "POST",
                url: '/Admin/DeleteTchContent/',
                data: { tchid: tchid },
                success: function (res) {
                    console.log("success");

                }, error: function () {
                    console.log("error")
                }
            });
        }
    });





    subCategorySelect.addEventListener('change', function () {
        var selectedSubCategoryId = subCategorySelect.value;

        deepCategorySelect.innerHTML = '';
        optionList.innerHTML = '';

        getDeepCategories(selectedSubCategoryId)
            .then(function (deepCategories) {
                if (Array.isArray(deepCategories)) {
                    deepCategories.forEach(function (deepCategory) {
                        var option = document.createElement('option');
                        option.value = deepCategory.deepCategoryId;
                        option.text = deepCategory.deepCategoryName;
                        deepCategorySelect.appendChild(option);
                    });
                } else {
                    console.error('Error: deepCategories is not an array');
                }
            })
            .catch(function (error) {
                console.error('Error:', error);
            });
        optionList.innerHTML = initialOptionListHTML;
        getTech(selectedSubCategoryId)
            .then(function (tech) {
                if (Array.isArray(tech)) {
                    tech.forEach(function (kamil) {
                        var option = document.createElement('option');
                        option.value = kamil.techCharacteristicId;
                        option.text = kamil.techCharacteristicName;
                        optionList.appendChild(option);
                    });
                } else {
                    console.error('Error: deepCategories is not an array');
                }
            })
            .catch(function (error) {
                console.error('Error:', error);
            });
    });

    function getDeepCategories(subCategoryId) {
        return fetch('/Admin/GetCateogry?subCategoryId=' + subCategoryId)
            .then(response => response.json())
            .then(deepCategories => {
                return deepCategories;
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }


    function getTech(subCategoryId) {
        return fetch('/Admin/GetTech?subCategoryId=' + subCategoryId)
            .then(response => response.json())
            .then(tech => {
                return tech;
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }



    document.querySelector("#first-file").onchange = function () {
        const [file] = this.files
        if (file) {
            this.previousElementSibling.firstElementChild.src = URL.createObjectURL(file)
        }
    }
    $('.files .removeFile').click(function () {
        $.ajax({
            type: "POST",
            url: '/Admin/DeletePhoto/' + $(this).attr('hid'),
            success: function (res) {
                console.log("success");

            }, error: function () {
                console.log("error")
            }
        });
        $(this).remove();
    })

    document.querySelector('#next-file').addEventListener('change', function () {
        let fayllar = this.files
        for (var i = 0; i < fayllar.length; i++) {
            let file = fayllar[i]
            let div = document.createElement('div');
            div.className = "file removeFile";
            let label = document.createElement('label');
            let img = document.createElement('img');
            img.src = URL.createObjectURL(file);
            label.appendChild(img);
            div.appendChild(label);
            let input = document.createElement('input');
            input.setAttribute('type', 'text');
            input.setAttribute('name', 'fileName');
            input.value = file.name;
            div.appendChild(input)
            div.onclick = function () {
                this.remove();
            }
            document.querySelector(".files").appendChild(div);
        }
        let inputf = this.cloneNode(this);
        inputf.setAttribute("name", "nextFile");
        document.querySelector('.files').appendChild(inputf);
        this.value = null;
    })

</script>
